{
	"$schema": "https://next.shadcn-svelte.com/schema/registry-item.json",
	"name": "complex-component",
	"title": "Complex Component",
	"type": "registry:component",
	"description": "A complex component showing hooks, libs and components.",
	"devDependencies": [
		"zod@^3.24.4"
	],
	"registryDependencies": [
		"card"
	],
	"files": [
		{
			"content": "<script lang=\"ts\">\r\n\timport PokemonCard from \"./components/pokemon-card.svelte\";\r\n\timport { getPokemonList } from \"./lib/pokemon.js\";\r\n</script>\r\n\r\n{#await getPokemonList({ limit: 12 })}\r\n\t<div>Loading pokemons...</div>\r\n{:then pokemons}\r\n\t{#if pokemons}\r\n\t\t<div class=\"mx-auto w-full max-w-2xl px-4\">\r\n\t\t\t<div class=\"grid grid-cols-2 gap-4 py-10 sm:grid-cols-3 md:grid-cols-4\">\r\n\t\t\t\t{#each pokemons.results as pokemon (pokemon.name)}\r\n\t\t\t\t\t<PokemonCard name={pokemon.name} />\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n{:catch}\r\n\t<div class=\"mx-auto w-full max-w-2xl px-4\">\r\n\t\t<p>Error loading pokemons</p>\r\n\t</div>\r\n{/await}\r\n",
			"type": "registry:page",
			"target": "src/routes/pokemon/+page.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n\timport { getPokemon } from \"$lib/registry/blocks/complex-component/lib/pokemon.js\";\r\n\timport * as Card from \"$UI$/card/index.js\";\r\n\timport PokemonImage from \"$lib/registry/blocks/complex-component/components/pokemon-image.svelte\";\r\n\r\n\tlet { name }: { name: string } = $props();\r\n</script>\r\n\r\n{#await getPokemon(name)}\r\n\t<div>Loading...</div>\r\n{:then pokemon}\r\n\t{#if pokemon}\r\n\t\t<Card.Root>\r\n\t\t\t<Card.Content class=\"flex flex-col items-center p-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<PokemonImage name={pokemon.name} number={pokemon.id} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"text-center font-medium\">{pokemon.name}</div>\r\n\t\t\t</Card.Content>\r\n\t\t</Card.Root>\r\n\t{/if}\r\n{:catch}\r\n\t<div>Error loading pokemon</div>\r\n{/await}\r\n",
			"type": "registry:component",
			"target": "pokemon-card.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n\timport { usePokemonImage } from \"$lib/registry/blocks/complex-component/hooks/use-pokemon.svelte\";\r\n\r\n\tlet { number, name }: { number: number; name: string } = $props();\r\n\r\n\tconst imageUrl = usePokemonImage(number);\r\n</script>\r\n\r\n{#if imageUrl}\r\n\t<img src={imageUrl} alt={name} />\r\n{/if}\r\n",
			"type": "registry:component",
			"target": "pokemon-image.svelte"
		},
		{
			"content": "import { z } from \"zod\";\r\n\r\nexport async function getPokemonList({ limit = 10 }: { limit?: number }) {\r\n\ttry {\r\n\t\tconst response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}`);\r\n\t\treturn z\r\n\t\t\t.object({\r\n\t\t\t\tresults: z.array(z.object({ name: z.string() })),\r\n\t\t\t})\r\n\t\t\t.parse(await response.json());\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport async function getPokemon(name: string) {\r\n\ttry {\r\n\t\tconst response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\t\tif (!response.ok) throw new Error(\"Failed to fetch pokemon\");\r\n\r\n\t\treturn z\r\n\t\t\t.object({\r\n\t\t\t\tname: z.string(),\r\n\t\t\t\tid: z.number(),\r\n\t\t\t\tsprites: z.object({\r\n\t\t\t\t\tfront_default: z.string(),\r\n\t\t\t\t}),\r\n\t\t\t\tstats: z.array(\r\n\t\t\t\t\tz.object({\r\n\t\t\t\t\t\tbase_stat: z.number(),\r\n\t\t\t\t\t\tstat: z.object({\r\n\t\t\t\t\t\t\tname: z.string(),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t})\r\n\t\t\t.parse(await response.json());\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n}\r\n",
			"type": "registry:lib",
			"target": "pokemon.ts"
		},
		{
			"content": "// Unnecessary hook, but an example of how to add a hook to a custom registry.\r\n\r\nexport function usePokemonImage(number: number) {\r\n\treturn `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${number}.png`;\r\n}\r\n",
			"type": "registry:hook",
			"target": "use-pokemon.svelte.ts"
		}
	]
}