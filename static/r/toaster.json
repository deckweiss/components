{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "toaster",
	"title": "Custom Toast",
	"type": "registry:component",
	"description": "A toast component with custom look.",
	"dependencies": [
		"svelte-sonner",
		"@lucide/svelte"
	],
	"devDependencies": [
		"@lucide/svelte@^0.515.0"
	],
	"registryDependencies": [
		"button"
	],
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { XIcon } from \"@lucide/svelte\";\n\timport { Button } from \"$UI$/button\";\n\timport type { Toast as ToastType } from \"./toaster.ts\";\n\n\tlet { type, message, action }: ToastType = $props();\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet typeClasses = {\n\t\tdefault: \"bg-primary\",\n\t\tsuccess: \"bg-[#275E2E]\",\n\t\terror: \"bg-[#841106]\",\n\t};\n\n\tlet typeOverline = {\n\t\tdefault: \"Info\",\n\t\tsuccess: \"Erfolg\",\n\t\terror: \"Fehler\",\n\t};\n</script>\n\n<div\n\tclass={['flex min-w-[250px] flex-col gap-4 rounded-lg p-5 md:max-w-[350px]', typeClasses[type]]}\n>\n\t<span class=\"text-micro-md font-bold uppercase text-cool-grey-600\">\n\t\t{typeOverline[type]}\n\t</span>\n\t<p class=\"max-w-[250px] text-sm\">\n\t\t{message}\n\t</p>\n\t<div class=\"flex gap-2\">\n\t\t{#if action}\n\t\t\t<Button onclick={action.callback}>{action.text}</Button>\n\t\t{/if}\n\t\t<Button onclick={() => dispatch('closeToast')}>Discard</Button>\n\t</div>\n\t<button\n\t\tonclick={() => dispatch('closeToast')}\n\t\tclass=\"absolute right-4 top-4 h-6 w-6 rounded-lg bg-white/10 p-1 text-white\"\n\t>\n\t\t<XIcon size=\"16\" />\n\t</button>\n</div>\n",
			"type": "registry:component",
			"target": "toast.svelte"
		},
		{
			"content": "import { toast } from \"svelte-sonner\";\nimport CustomToastComponent from \"./toast.svelte\";\n\nexport type Toast = {\n\ttype: \"default\" | \"success\" | \"error\";\n\tmessage: string;\n\taction?: { text: string; callback: () => void };\n};\n\nexport const toaster = {\n\tpushToast: (t: Toast, options?: { duration?: number }) => {\n\t\treturn toast.custom(CustomToastComponent, {\n\t\t\tcomponentProps: t,\n\t\t\t...options,\n\t\t});\n\t},\n\tdismissToast: (toastId: number | string) => {\n\t\ttoast.dismiss(toastId);\n\t},\n};\n",
			"type": "registry:hook",
			"target": "toaster.ts"
		},
		{
			"content": "import Toast from \"./toast.svelte\";\nimport { type Toast as ToastType, toaster } from \"./toaster\";\n\nexport { Toast, toaster };\nexport type { ToastType };\n",
			"type": "registry:file",
			"target": "toaster/index.ts"
		}
	]
}